
//------------------------------------------------------------------------------
// This code was generated by a tool.
//
//   Tool : Bond Compiler 0.10.1.0
//   File : Payload_types.cs
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// <auto-generated />
//------------------------------------------------------------------------------


// suppress "Missing XML comment for publicly visible type or member"
#pragma warning disable 1591


#region ReSharper warnings
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable InconsistentNaming
// ReSharper disable CheckNamespace
// ReSharper disable UnusedParameter.Local
// ReSharper disable RedundantUsingDirective
#endregion

namespace BondExampleA.Global
{
    using System.Collections.Generic;

    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.10.1.0")]
    public enum PayloadType
    {
        FirstType,
        SecondType,
        None,
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.10.1.0")]
    public partial class Payload
    {
        [global::Bond.Id(0)]
        public PayloadType PayloadType { get; set; }

        public Payload()
            : this("BondExampleA.Global.Payload", "Payload")
        {}

        protected Payload(string fullName, string name)
        {
            PayloadType = PayloadType.None;
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.10.1.0")]
    public partial class FirstTypePayload
        : Payload
    {
        [global::Bond.Id(0)]
        public string name { get; set; }

        public FirstTypePayload()
            : this("BondExampleA.Global.FirstTypePayload", "FirstTypePayload")
        {}

        protected FirstTypePayload(string fullName, string name)
        {
            this.name = "";
        }
    }

    [global::Bond.Schema]
    [System.CodeDom.Compiler.GeneratedCode("gbc", "0.10.1.0")]
    public partial class SecondTypePayload
        : Payload
    {
        [global::Bond.Id(0)]
        public global::Bond.IBonded<SecondType> SecondType { get; set; }

        public SecondTypePayload()
            : this("BondExampleA.Global.SecondTypePayload", "SecondTypePayload")
        {}

        protected SecondTypePayload(string fullName, string name)
        {
            SecondType = global::Bond.Bonded<SecondType>.Empty;
        }
    }
} // BondExampleA.Global
